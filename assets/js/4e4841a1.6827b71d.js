"use strict";(self.webpackChunkwoo_docs_migration=self.webpackChunkwoo_docs_migration||[]).push([[1181],{3400:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"getting-started/extension-development/using-custom-attributes-in-menus","title":"Managing custom attributes in WooCommerce menus and taxonomy archives","description":"Attributes that can be used for the layered nav are a custom taxonomy, which means you can display them in menus, or display products by attributes. This requires some work on your part, and archives must be enabled.","source":"@site/../getting-started/extension-development/using-custom-attributes-in-menus.md","sourceDirName":"getting-started/extension-development","slug":"/getting-started/extension-development/using-custom-attributes-in-menus","permalink":"/docs-playground/docs/getting-started/extension-development/using-custom-attributes-in-menus","draft":false,"unlisted":false,"editUrl":"https://github.com/woocommerce/woocommerce/tree/trunk/docs/../getting-started/extension-development/using-custom-attributes-in-menus.md","tags":[{"inline":true,"label":"how-to","permalink":"/docs-playground/docs/tags/how-to"}],"version":"current","frontMatter":{"post_title":"Managing custom attributes in WooCommerce menus and taxonomy archives","sidebar_label":"Custom attributes in menus","tags":["how-to"]},"sidebar":"tutorialSidebar","previous":{"title":"Low-code tools","permalink":"/docs-playground/docs/getting-started/extension-development/tools-for-low-code-development"},"next":{"title":"Plugin API callbacks","permalink":"/docs-playground/docs/getting-started/extension-development/woocommerce-plugin-api-callback"}}');var s=n(4848),r=n(8453);const a={post_title:"Managing custom attributes in WooCommerce menus and taxonomy archives",sidebar_label:"Custom attributes in menus",tags:["how-to"]},i="Managing custom attributes in WooCommerce menus and taxonomy archives",u={},c=[{value:"Register the taxonomy for menus",id:"register-the-taxonomy-for-menus",level:2},{value:"Create a template",id:"create-a-template",level:2}];function m(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"managing-custom-attributes-in-woocommerce-menus-and-taxonomy-archives",children:"Managing custom attributes in WooCommerce menus and taxonomy archives"})}),"\n",(0,s.jsx)(t.p,{children:"Attributes that can be used for the layered nav are a custom taxonomy, which means you can display them in menus, or display products by attributes. This requires some work on your part, and archives must be enabled."}),"\n",(0,s.jsx)(t.h2,{id:"register-the-taxonomy-for-menus",children:"Register the taxonomy for menus"}),"\n",(0,s.jsx)(t.p,{children:"When registering taxonomies for your custom attributes, WooCommerce calls the following hook:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-php",children:"$show_in_nav_menus = apply_filters('woocommerce_attribute_show_in_nav_menus', false, $name);\n"})}),"\n",(0,s.jsxs)(t.p,{children:["So, for example, if your attribute slug was ",(0,s.jsx)(t.code,{children:"size"})," you would do the following to register it for menus:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-php",children:"add_filter('woocommerce_attribute_show_in_nav_menus', 'wc_reg_for_menus', 1, 2);\n\nfunction wc_reg_for_menus( $register, $name = '' ) {\nif ( $name == 'pa_size' ) $register = true;\nreturn $register;\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Custom attribute slugs are prefixed with ",(0,s.jsx)(t.code,{children:"pa_"}),", so an attribute called ",(0,s.jsx)(t.code,{children:"size"})," would be ",(0,s.jsx)(t.code,{children:"pa_size"})]}),"\n",(0,s.jsxs)(t.p,{children:["Now use your attribute in  ",(0,s.jsx)(t.strong,{children:"Appearance > Menus"}),". You will notice, however, that it has default blog styling when you click on a link to your taxonomy term."]}),"\n",(0,s.jsx)(t.h2,{id:"create-a-template",children:"Create a template"}),"\n",(0,s.jsx)(t.p,{children:"You need to theme your attribute to make it display products as you want. To do this:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Copy ",(0,s.jsx)(t.code,{children:"woocommerce/templates/taxonomy-product_cat.php"})," into your theme folder"]}),"\n",(0,s.jsxs)(t.li,{children:["Rename the template to reflect your attribute - in our example we'd use ",(0,s.jsx)(t.code,{children:"taxonomy-pa_size.php"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"You should now see this template when viewing taxonomy terms for your custom attribute."})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var o=n(6540);const s={},r=o.createContext(s);function a(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);